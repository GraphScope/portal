export default {
  /** sidebar  */
  Recommended: 'Recommended',
  History: 'History',
  Copilot: 'Copilot',
  Saved: 'Saved',
  'Stored Procedures': 'Stored Procedures',

  /** Index */
  'You can write cypher or gremlin queries, and then click the {icon} button to query data':
    'You can write cypher or gremlin queries, and then click the {icon} button to query data',

  /** recommended */
  'Vertex Labels': 'Vertex Labels',
  'Edge Labels': 'Edge Labels',
  'Property Keys': 'Property Keys',
  /** saved */
  'No saved query statements {br} You can click {icon} to save.':
    'No saved query statements {br} You can click {icon} to save.',
  /** store procedure */
  'No stored procedures available. {br} Go to the <a>Extension</a> and create one now!':
    'No stored procedures available. {br} Go to the <a>Extension</a> and create one now!',
  /** copilot */
  'Privacy Security Notice': 'Privacy Security Notice',
  Setting: 'Setting',
  'query.app.sidebar.gpt.setting.security': `To improve the quality of generated Cypher query statements, we'll utilize your graph data schema as the prompt for ChatGPT. Your data will be kept strictly confidential and solely used for this purpose.Furthermore, please note that your OpenAI API key is only stored locally in your browser for added security`,
  'OpenAI API key is only stored locally in your browser': 'OpenAI API key is only stored locally in your browser',
  'query.copilot.welcome':
    "Hello! I'm the GraphScope Query Assistant. Feel free to ask me any questions about Cypher or Gremlin queries.",
  'recommend 5 interesting query statements': 'recommend 5 interesting query statements',
  'query any subgraph': 'query any subgraph',
  'insight the statistical distribution of vertex labels in the graph':
    'insight the statistical distribution of vertex labels in the graph',
  /** Statement */
  Save: 'Save',
  Delete: 'Delete',
  Query: 'Query',
  Share: 'Share',
  "query submmited on {submitTime}. It's running ... ": "query submmited on {submitTime}. It's running ... ",
  'query submmited on {submitTime}. Running {runningTime} ms':
    'query submmited on {submitTime}. Running {runningTime} ms',
  'A total of {totalCount} records were retrieved': 'A total of {totalCount} records were retrieved',
  'A total of {totalCount} records were retrieved, including {nodeCount} nodes and  {edgeCount} edges.':
    'A total of {totalCount} records were retrieved, including {nodeCount} nodes and  {edgeCount} edges.',
  /** Properties tags */
  Color: 'Color',
  Size: 'Size',
  Caption: 'Caption',
  LineWidth: 'LineWidth',
  /** Properties detial */
  'Node properties': 'Node properties',
  /** display mode */
  Graph: 'Graph',
  Table: 'Table',
  Raw: 'Raw',
  'Style Setting': 'Style Setting',
  'You can click on each label to set the color, size, and display text for vertices and edges.':
    'You can click on each label to set the color, size, and display text for vertices and edges.',
  'Export graph json': 'Export graph json',
  'Clustering layout': 'Clustering layout',
  'Vertex Properties': 'Vertex Properties',
  'Connect Endpoint': 'Connect Endpoint',
  'Connection URL': 'Connection URL',
  'Query language': 'Query language',
  'Query initiation method': 'Query initiation method',
  Username: 'Username',
  Password: 'Password',
  Connect: 'Connect',
  Close: 'Close',
  'Select nodes by box selection': 'Select nodes by box selection',
  'Switch graph view dimensions': 'Switch graph view dimensions',
  'Zoom to fitview': 'Zoom to fitview',
  Fullscreen: 'Fullscreen',
  'Toggle Right Side': 'Toggle Right Side',
  'Caption Status': 'Caption Status',

  /** Content */
  'content.current.graph': 'Current Graph',
  'content.save.notebooks.error': 'Failed to save notebooks',
  'content.load.schema.error': 'Failed to load schema for graph: {graphId}',
  'content.close.notebook.confirm.title': 'Are you sure you want to close this notebook?',
  'content.close.notebook.confirm.content': 'Unsaved changes may be lost.',
  'content.return.to.notebooks': 'Return to notebook list',
  'content.close.notebook': 'Close Notebook',
  'content.add.cell': 'Add Cell',

  /** Welcome page */
  'notebook.title': 'Graph Query Notebook',
  'notebook.description': 'Create or choose a notebook to start your graph data exploration journey',
  'notebook.empty.message': 'You have not created any notebooks yet',
  'notebook.create.blank': 'Blank Notebook',
  'notebook.create.example': 'Example Notebook',
  'notebook.example': 'Example Notebook',
  'notebook.default.name': 'Notebook {number}',
  'notebook.save.error': 'Failed to save notebooks',
  'notebook.delete.confirm.title': 'Are you sure you want to delete this notebook?',
  'notebook.delete.confirm.content': 'After deletion, it cannot be recovered, and all content in the notebook will be lost.',
  'notebook.last.modified': 'Modified on {date}',
  'notebook.query.count': '{count} queries',
  'notebook.edit.title': 'Edit Notebook',
  'notebook.create.title': 'Create New Notebook',
  'notebook.name': 'Notebook Name',
  'notebook.name.label': 'Notebook Name',
  'notebook.name.placeholder': 'Please enter notebook name',
  'notebook.name.required': 'Please enter notebook name',

  /** QueryCell */
  'querycell.expand.results': 'Expand Results',
  'querycell.collapse.results': 'Collapse Results',
  'querycell.fullscreen': 'Fullscreen',
  'querycell.exit.fullscreen': 'Exit Fullscreen',
  'querycell.move.up': 'Move Cell Up',
  'querycell.move.down': 'Move Cell Down',
  'querycell.shortcut.key': 'Shift+↑',
  'querycell.shortcut.key.down': 'Shift+↓',
  'querycell.click.to.expand': 'Click here or the button above to expand query results',
  'querycell.error.correction': 'Query Syntax Error Detection',
  'querycell.error.detected': 'Potential syntax error detected',
  'querycell.error.line': 'Error line: {line}',
  'querycell.error.correction.suggestion': 'Suggested correction',
  'querycell.alternative.suggestions': 'Alternative suggestions',
  'querycell.accept.correction': 'Accept and Execute',
  'querycell.cancel.correction': 'Cancel',
  
  /** GraphSelector */
  'graphselector.select.datasource': 'Select data source',
  'graphselector.status': 'Status: {status}',
  'graphselector.status.active': 'Active',
  'graphselector.status.inactive': 'Inactive',
  'graphselector.status.loading': 'Loading',
  'graphselector.status.unknown': 'Unknown',

  /** Error Detection */
  'error.missing.semicolon.cypher': 'Cypher query may be missing a semicolon at the end',
  'error.missing.next.gremlin': 'Gremlin query may need .next() or .toList() to execute',
  
  // Basic typo detection
  'error.typo.match': 'Typo detected: "mathc" should be "MATCH"',
  'error.typo.return': 'Typo detected: "retrun" should be "RETURN"',
  'error.typo.where': 'Typo detected: "wehre" should be "WHERE"',
  'error.typo.with': 'Typo detected: "wiht" should be "WITH"',
  'error.typo.create': 'Typo detected: "craete" should be "CREATE"',
  'error.typo.delete': 'Typo detected: "deleet" should be "DELETE"',
  'error.typo.remove': 'Typo detected: "remvoe" should be "REMOVE"',
  'error.typo.optional': 'Typo detected: "optionel" should be "OPTIONAL"',
  'error.typo.merge': 'Typo detected: "MERG" should be "MERGE"',

  // Advanced error detection  
  'error.order.by.syntax': 'Potential issue with ORDER BY syntax',
  'error.unmatched.parentheses': 'Unmatched parentheses detected',
  'error.relationship.arrow': 'Incorrect relationship arrow format',
  'error.node.label.spaces': 'Node label contains spaces, should be enclosed in backticks',
  'error.missing.return': 'MATCH clause without RETURN statement',
  'error.comparison.operator': 'Incorrect comparison operator',
  'error.single.quotes': 'Using single quotes instead of double quotes',
  'error.unclosed.case': 'Unclosed CASE statement',
  'error.unmatched.quotes': 'Unmatched quotes',
  
  // Gremlin errors
  'error.typo.vertices': 'Typo detected: ".vertexs()" should be ".vertices()"',
  'error.typo.inV': 'Typo detected: Use ".inV()" for incoming vertices',
  'error.typo.outV': 'Typo detected: Use ".outV()" for outgoing vertices',
  'error.typo.V': 'Typo detected: Use ".V()" for vertices',
  'error.typo.E': 'Typo detected: Use ".E()" for edges',
  'error.typo.label': 'Typo detected: ".lable()" should be ".label()"',
  'error.typo.property': 'Typo detected: ".proprety" should be ".property"',
  'error.typo.addV': 'Typo detected: Use ".addV()" to add vertices',
  'error.typo.addE': 'Typo detected: Use ".addE()" to add edges',
  'error.typo.values': 'Typo detected: ".valeus" should be ".values"',
  'error.typo.select': 'Typo detected: ".selectt" should be ".select"',
  'error.typo.groupBy': 'Typo detected: ".grupBy" should be ".groupBy"',
  'error.typo.groupCount.by': 'Typo detected: Incorrect ".groupCount().by" syntax',
  'error.typo.count': 'Typo detected: ".conut" should be ".count"',
  
  // Context-specific errors
  'error.redundant.method.chaining': 'Redundant method chaining detected',
  'error.incomplete.has': 'Incomplete .has() method call',
  'error.lambda.syntax': 'Incorrect lambda syntax',
  'error.redundant.as': 'Redundant .as() step',
  'error.withSideEffect.syntax': 'Incorrect withSideEffect syntax',
  'error.merge.where.instead.of.on': 'Using WHERE instead of ON with MERGE',
  'error.missing.relationship.direction': 'Missing relationship direction',
  'error.incomplete.with': 'Incomplete WITH clause',
  'error.missing.traversal.source': 'Missing traversal source (.V or .E)',
  'error.missing.unfold.after.valueMap': 'Missing .unfold() after .valueMap()',
  'error.unbalanced.parentheses': 'Unbalanced parentheses in query',
  'error.unbalanced.brackets': 'Unbalanced brackets in query',
  'error.unbalanced.braces': 'Unbalanced braces in query',
  'error.unbalanced.double.quotes': 'Unbalanced double quotes in query',
  'error.unbalanced.single.quotes': 'Unbalanced single quotes in query',
  'error.undefined.variable': 'Using undefined variables in query',
  
  // Error contexts - explanations
  'error.context.order.by.syntax': 'The ORDER BY clause might have an issue with DESC and LIMIT placement.',
  'error.context.unmatched.parentheses': 'There are opening parentheses without matching closing ones. This will cause syntax errors.',
  'error.context.relationship.arrow': 'The relationship arrow syntax is incorrect. Use -> or <- for directed relationships.',
  'error.context.node.label.spaces': 'When a node label contains spaces, it must be enclosed in backticks.',
  'error.context.missing.return': 'A MATCH clause should typically have a RETURN statement to define what data to retrieve.',
  'error.context.comparison.operator': 'Cypher uses = for equality and <> for inequality, not == or !=.',
  'error.context.single.quotes': 'In Neo4j Cypher, double quotes are preferred for string literals.',
  'error.context.unclosed.case': 'Each CASE statement must be closed with an END keyword.',
  'error.context.unmatched.quotes': 'String literals must have matching opening and closing quotes.',
  'error.context.redundant.method.chaining': 'Multiple .has() calls can be chained without repeating the method name.',
  'error.context.incomplete.has': 'The .has() method typically needs both a property name and a value.',
  'error.context.unbalanced.parentheses': 'Ensure all opening parentheses have matching closing ones.',
  'error.context.unbalanced.brackets': 'Ensure all opening brackets have matching closing ones.',
  'error.context.unbalanced.braces': 'Ensure all opening braces have matching closing ones.',
  'error.context.unbalanced.quotes': 'String literals must have matching quotes at beginning and end.',
  'error.context.lambda.syntax': 'Lambda expressions in Gremlin should follow the syntax: {parameter -> expression}.',
  'error.context.redundant.as': 'Multiple labels can be set in a single .as() step.',
  'error.context.withSideEffect.syntax': 'Check the withSideEffect syntax for correct parameter format.',
  'error.context.merge.where.instead.of.on': 'With MERGE, use ON to specify conditions, not WHERE.',
  'error.context.missing.relationship.direction': 'Undirected relationships need to be given a direction in most cases.',
  'error.context.incomplete.with': 'WITH clause should specify which variables to carry forward.',
  'error.context.missing.traversal.source': 'Gremlin traversals should typically start with g.V() or g.E().',
  'error.context.missing.unfold.after.valueMap': 'Using .unfold() after .valueMap() helps normalize the results.',
  'error.context.undefined.variable': 'You are trying to access a variable that has not been defined in your query.',

  /** Common */
  'common.save': 'Save',
  'common.create': 'Create',
  'common.delete': 'Delete',
  'common.cancel': 'Cancel',
  'common.edit': 'Edit',
  'common.close': 'Close',
  'common.loading': 'Loading...',
  'common.executing': 'Executing...',
  'common.error': 'Error',
  'common.success': 'Success',
  'common.warning': 'Warning',
  'common.info': 'Info',
};
